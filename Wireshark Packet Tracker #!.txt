#pip install pygeoip
#pip install dpkt
 
import dpkt
import pygeoip
import socket 
import requests
 
gi = pygeoip.GeoIP(r'C:\\GeoLiteCity.dat')"

#def auto_ip_puller():
        site = requests.get(\"https://httpbin.org/ip\")
        dataipme = site.json()
        ip_address = dataipme['origin']
        print(f\"{ip_address}\")
 
def retKML(dstip, srcip):
    dst = gi.record_by_name(dstip)
    src = gi.record_by_name('XXX.XXX.XXX.XXX') # Hardcoded, can be made with base scrip above with optimization
    try:
        dstlongitude = dst['longitude']
        dstlatitude = dst['latitude']
        srclongitude = src['longitude']
        srclatitude = src['latitude']
        kml = (
            '<Placemark>\\n'
            '<name>%s</name>\\n'
            '<extrude>1</extrude>\\n'
            '<tessellate>1</tessellate>\\n'
            '<styleUrl>#transBluePoly</styleUrl>\\n'
            '<LineString>\\n'
            '<coordinates>%6f,%6f\\n%6f,%6f</coordinates>\\n'
            '</LineString>\\n'
            '</Placemark>\\n'
        )%(dstip, dstlongitude, dstlatitude, srclongitude, srclatitude)
        return kml
    except:
        return ''

def plotIPs(pcap):
    kmlPts = ''
    for (ts, buf) in pcap:
        try:
            eth = dpkt.ethernet.Ethernet(buf)
            ip = eth.data
            src = socket.inet_ntoa(ip.src)
            dst = socket.inet_ntoa(ip.dst)
            KML = retKML(dst, src)
            kmlPts = kmlPts + KML
        except:
            pass
    return kmlPts

def main_code():
    f = open(r'C:\\WiresharkDump.pcap', 'rb')
    pcap = dpkt.pcap.Reader (f)
    kmlheader = '<?xml version=\"1.0\" encoding=\"UTF-8\"?> \\n<kml xmlns=\"http://www.opengis.net/kml/2.2\">\\n<Document>\\n'\\
    '<Style id=\"transBluePoly\">' \\
                '<LineStyle>' \\
                '<width>1.5</width>' \\
                '<color>501400E6</color>' \\
                '</LineStyle>' \\
                '</Style>'
    kmlfooter = '</Document>\\n</kml>\\n'
    kmldoc=kmlheader+plotIPs(pcap)+kmlfooter
    print(kml.doc)"

def excute_kmlconverter():
    if __name__ == '__main__': # dosen't convert text into file, can be made with code
        main_code()"
